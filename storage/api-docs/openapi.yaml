openapi: 3.0.0
info:
  title: Translation Management Service API
  description: API for managing translations across multiple locales with tagging capabilities
  version: 1.0.0
servers:
  - url: http://localhost:8000/api
    description: Translation Management Service Development Server
paths:
  /register:
    post:
      summary: Register a new user
      tags:
        - Authentication
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - name
                - email
                - password
                - password_confirmation
              properties:
                name:
                  type: string
                  example: John Doe
                email:
                  type: string
                  format: email
                  example: john@example.com
                password:
                  type: string
                  format: password
                  example: password123
                password_confirmation:
                  type: string
                  format: password
                  example: password123
      responses:
        '201':
          description: User registered successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthResponse'
        '422':
          description: Validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
  /login:
    post:
      summary: Login user
      tags:
        - Authentication
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - email
                - password
              properties:
                email:
                  type: string
                  format: email
                  example: john@example.com
                password:
                  type: string
                  format: password
                  example: password123
      responses:
        '200':
          description: User logged in successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthResponse'
        '401':
          description: Invalid login credentials
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '422':
          description: Validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
  /logout:
    post:
      summary: Logout user
      tags:
        - Authentication
      security:
        - bearerAuth: []
      responses:
        '200':
          description: User logged out successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse'
        '401':
          description: Unauthenticated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /translations:
    get:
      summary: List translations
      tags:
        - Translations
      security:
        - bearerAuth: []
      parameters:
        - name: locale
          in: query
          description: Filter by locale
          required: false
          schema:
            type: string
            example: en
        - name: page
          in: query
          description: Page number
          required: false
          schema:
            type: integer
            default: 1
      responses:
        '200':
          description: List of translations
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TranslationListResponse'
        '401':
          description: Unauthenticated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    post:
      summary: Create a new translation
      tags:
        - Translations
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - key
                - value
                - locale
                - tags
              properties:
                key:
                  type: string
                  example: welcome.message
                value:
                  type: string
                  example: Welcome to our application
                locale:
                  type: string
                  example: en
                tags:
                  type: array
                  items:
                    type: string
                  example: [web, mobile]
      responses:
        '201':
          description: Translation created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TranslationResponse'
        '401':
          description: Unauthenticated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '409':
          description: Translation already exists
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '422':
          description: Validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
  /translations/{id}:
    get:
      summary: Get a specific translation
      tags:
        - Translations
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Translation details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TranslationResponse'
        '401':
          description: Unauthenticated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Translation not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      summary: Update a translation
      tags:
        - Translations
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - value
                - tags
              properties:
                value:
                  type: string
                  example: Updated welcome message
                tags:
                  type: array
                  items:
                    type: string
                  example: [web, desktop]
      responses:
        '200':
          description: Translation updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TranslationResponse'
        '401':
          description: Unauthenticated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Translation not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '422':
          description: Validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
    delete:
      summary: Delete a translation
      tags:
        - Translations
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Translation deleted successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse'
        '401':
          description: Unauthenticated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Translation not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /translations/search/tags/{tag}:
    get:
      summary: Search translations by tag
      tags:
        - Search
      security:
        - bearerAuth: []
      parameters:
        - name: tag
          in: path
          required: true
          schema:
            type: string
        - name: locale
          in: query
          description: Filter by locale
          required: false
          schema:
            type: string
            example: en
        - name: page
          in: query
          description: Page number
          required: false
          schema:
            type: integer
            default: 1
      responses:
        '200':
          description: List of translations matching the tag
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TranslationListResponse'
        '401':
          description: Unauthenticated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /translations/search/keys/{key}:
    get:
      summary: Search translations by key
      tags:
        - Search
      security:
        - bearerAuth: []
      parameters:
        - name: key
          in: path
          required: true
          schema:
            type: string
        - name: locale
          in: query
          description: Filter by locale
          required: false
          schema:
            type: string
            example: en
        - name: page
          in: query
          description: Page number
          required: false
          schema:
            type: integer
            default: 1
      responses:
        '200':
          description: List of translations matching the key
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TranslationListResponse'
        '401':
          description: Unauthenticated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /translations/search/content/{content}:
    get:
      summary: Search translations by content
      tags:
        - Search
      security:
        - bearerAuth: []
      parameters:
        - name: content
          in: path
          required: true
          schema:
            type: string
        - name: locale
          in: query
          description: Filter by locale
          required: false
          schema:
            type: string
            example: en
        - name: page
          in: query
          description: Page number
          required: false
          schema:
            type: integer
            default: 1
      responses:
        '200':
          description: List of translations matching the content
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TranslationListResponse'
        '401':
          description: Unauthenticated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /translations/export/{locale}:
    get:
      summary: Export translations as JSON
      tags:
        - Export
      parameters:
        - name: locale
          in: path
          required: false
          schema:
            type: string
            example: en
      responses:
        '200':
          description: JSON object with translations
          content:
            application/json:
              schema:
                type: object
                additionalProperties:
                  type: string
                example:
                  "welcome.message": "Welcome to our application"
                  "login.title": "Login to your account"
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    AuthResponse:
      type: object
      properties:
        status:
          type: string
          example: success
        message:
          type: string
          example: User logged in successfully
        data:
          type: object
          properties:
            user:
              type: object
              properties:
                id:
                  type: integer
                  example: 1
                name:
                  type: string
                  example: John Doe
                email:
                  type: string
                  example: john@example.com
                created_at:
                  type: string
                  format: date-time
                updated_at:
                  type: string
                  format: date-time
            access_token:
              type: string
              example: 1|laravel_sanctum_token
            token_type:
              type: string
              example: Bearer
    SuccessResponse:
      type: object
      properties:
        status:
          type: string
          example: success
        message:
          type: string
          example: Operation completed successfully
    ErrorResponse:
      type: object
      properties:
        status:
          type: string
          example: error
        message:
          type: string
          example: An error occurred
    ValidationError:
      type: object
      properties:
        status:
          type: string
          example: error
        message:
          type: string
          example: Validation error
        errors:
          type: object
          additionalProperties:
            type: array
            items:
              type: string
          example:
            email:
              - The email field is required.
            password:
              - The password field is required.
    Translation:
      type: object
      properties:
        id:
          type: integer
          example: 1
        key:
          type: string
          example: welcome.message
        value:
          type: string
          example: Welcome to our application
        locale:
          type: string
          example: en
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        tags:
          type: array
          items:
            type: object
            properties:
              id:
                type: integer
                example: 1
              name:
                type: string
                example: web
              created_at:
                type: string
                format: date-time
              updated_at:
                type: string
                format: date-time
    TranslationResponse:
      type: object
      properties:
        status:
          type: string
          example: success
        message:
          type: string
          example: Translation created successfully
        data:
          $ref: '#/components/schemas/Translation'
    TranslationListResponse:
      type: object
      properties:
        status:
          type: string
          example: success
        data:
          type: object
          properties:
            data:
              type: array
              items:
                $ref: '#/components/schemas/Translation'
            current_page:
              type: integer
              example: 1
            from:
              type: integer
              example: 1
            last_page:
              type: integer
              example: 10
            per_page:
              type: integer
              example: 50
            to:
              type: integer
              example: 50
            total:
              type: integer
              example: 500 